<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAASCwAAEgsAAAAAAAAAAAAA////AAAAACMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAA
        ADMAAAAzAAAAMwAAADMAAAAzAAAAM////wAtiL3ALZLM/yyQzP8rkMv/K5DL/yuQy/8rkMv/K5DL/yuQ
        y/8rkMv/K5DL/yuQy/8rkMz/LZLN/zGUzv////8ALpPN/6ro//+K2fv/iNj6/4jX+v+H1/r/h9f6/4fX
        +v+H1/r/h9b5/4bW+f+G1/r/h9n7/63f9v8uk83/////AC6Tzf8mjcn/UK/g/4DU+f+A1Pn/gNT5/4DU
        +f9/1Pj/ftP3/3vQ9v950PX/edH3/6ba8/8oj8v/AAAAAP///wAuksz/p+X+/3rU+P8ojcn/K5DK/yyQ
        y/8rkMv/KY7J/ySJx/90z/X/cs71/6bZ8f8njsr/AAAAAAAAAAD///8ALpPN/yeNyf900fj/LZHL/wAA
        AAAAAAAsLozD2CuOyv9yz/f/bMz1/6fa8/8ojsv/AAAAAAAAAAAAAAAA////AC6SzP+n5f7/bc/4/y6R
        zP8AAAAdL4/H4y2Qyv9szff/Zsr1/6ja8/8oj8v/AAAAAAAAAAAAAAAAAAAAAP///wAuk83/KI7K/0mt
        4P8vksz/Kn+ypS2Qy/9ly/b/X8j0/6na8/8oj8v/AAAAAAAAAAAAAAAAAAAAAAAAAAD///8ALpLN/6nn
        /f9gyvX/LpDL/y2Qyv9fyfX/Wcbz/6na8/8oj8v/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AC6T
        zf8ojcn/V8Xz/yuNyP9XxfP/UsLy/6rc9P8pj8v/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wAuks3/rOb9/07B8f9OwPD/S7/w/6zd9P8pj8v/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AL5PN/ymOyf82pNv/Q73v/67d9P8pj8v/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AC6Szf+v6P3/Ornw/67f9P8qj8v/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wAuk83/Jo7K/67g9f8qkMv/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8ALpPN/7Xl+f8qkMz/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////ADGUzv8uk83/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAgAAAAIABAACAAwAAhAcAAIAPAACAHwAAgD8AAIB/
        AACA/wAAgf8AAIP/AACH/wAAj/8AAJ//AAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAASCwAAEgsAAAAA
        AAAAAAAAAAAABQAAABAAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAWAAAAEQAAAAYAAAAQAAAAMAAAAEIAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAA
        AEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAA
        AEMAAABDAAAAQwAAAEEAAAAuAAAADwAAABYwkcrvLZHM/yyRzP8skcz/LJHM/yyRzP8skcz/LJHM/yyR
        zP8skcz/LJHM/yyRzP8skcz/LJHM/yyRzP8skcz/LJHM/yyRzP8skcz/LJHM/yyRzP8skcz/LJHM/yyR
        zP8skcz/LJHM/yyRzP8tkcz/L5PN/zKVz/8AAAANAAAAFi2RzP+k4/3/hdb4/4bX+P+G1vj/htb4/4bW
        +P+G1vj/htb4/4bW+P+G1vj/htb4/4bW+P+G1vj/htb4/4bW+P+G1vj/htb4/4bW+P+G1vj/htb4/4bW
        +P+G1vj/htb4/4bW+P+G1vj/htf5/4na+/9rwev/Lo3EsQAAAAQAAAAWLZHM/6Pj/f+C1fj/gtT4/3/S
        9v990PX/fdD1/33Q9f990PX/fdD1/33Q9f990PX/fdD1/33Q9f990PX/fdD1/33Q9f990PX/fdD1/33Q
        9f990PX/fdD1/33Q9f990PX/fdD1/37R9v+A0/f/gcrt/yyRzP8AAAAGAAAAAAAAABYvk83/J43K/yWL
        yP8jicb/fdL2/3rP9P96z/T/es/0/3rP9P96z/T/es/0/3rP9P96z/T/es/0/3rP9P96z/T/es/0/3rP
        9P96z/T/es/0/3rP9P96z/T/es/0/3rP9P96z/T/fNH2/4LJ7P8rkMv/AAAABgAAAAAAAAAAAAAAFi2S
        zP+i4vz/fNP3/3zS9/95z/X/d870/3fO9P93zvT/d870/3fO9P93zvT/d870/3fO9P93zvT/d870/3fO
        9P93zvT/d870/3fO9P93zvT/d870/3fO9P93zvT/d870/3jQ9v+Ey+3/K5DM/wAAAAYAAAAAAAAAAAAA
        AAAAAAAWLZLM/6Hi/P940PX/d870/3XN8/91zvP/edD1/3vS9v970vb/e9L2/3vS9v970vb/e9L2/3vS
        9v970vb/e9L2/3rR9v94z/T/ds3z/3XN8/91zfP/dc3z/3XN8/92z/X/hcvt/yuQzP8AAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAABYvk83/J43K/yOJx/91z/X/cMzz/5rc+f8mjcn/LZHM/y2RzP8tkcz/LZHM/y2R
        zP8tkcz/LZHM/y2RzP8tkcz/Ko7K/1i15f9zzfT/cszz/3LM8/9yzPP/cs71/4fL7f8qkMz/AAAABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFi2SzP+g4fz/cc72/3DM9P9tyvP/mt36/yqQzP8AAAAWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGAAAAHAAAAD0rj8r/dND2/3DM8/9vy/P/b8vz/2/N9f+IzO//KpDM/wAA
        AAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWLZLM/6Dh+/9vzvX/b830/2rK8/+a3fn/K5DM/wAA
        ABYAAAAAAAAAAAAAAAAAAAAAAAAABgAAABwAAAA9LJDL/3PQ9v9uzPP/bMry/2zK8v9szPT/iczt/yqQ
        y/8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYvk83/KI7K/yiMyf8mi8f/asn0/5vd
        +f8rkMz/AAAAFgAAAAAAAAAAAAAAAAAAAAYAAAAcAAAAPS2Qy/9xzvb/bMnz/2rI8v9qyPL/acn0/4rO
        7f8rkMz/AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFi2SzP+f4fz/acr1/2rK
        9P9lx/P/mt36/yuQzP8AAAAWAAAAAAAAAAAAAAAGAAAAHAAAAD0tkMv/bc32/2nJ8/9nx/L/Z8fy/2bI
        9P+Mzu//K5DM/wAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWLZLM/5/h
        +/9lyPP/Zcfy/2HF8f+b3fn/K5DM/wAAABYAAAAAAAAABgAAABwAAAA9LZDL/2rM9f9lyPL/ZMbx/2PG
        8f9ix/P/js/v/yuQzP8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABYvk83/KI7K/yeLx/9kx/P/X8Tx/5zd+f8rkMz/AAAAFgAAAAYAAAAcAAAAPS6Ry/9oy/X/ZMby/2LF
        8f9hxfH/YMbz/4/P7/8rkMz/AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFi2SzP+g4fv/X8by/2DF8f9bwvD/nN75/yuQzP8AAAAcAAAAHAAAAD0ukcv/ZMr0/2DF
        8f9fxPD/XsTw/1zE8f+S0e//KpDM/wAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWLZLM/6Dh+/9cxvP/Xsby/1nC8P+c3vn/K5DM/wAAADIAAAA9LpHL/2HI
        9P9dxPH/XMPw/1vD8P9Zw/H/k9Hv/yqQzP8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYvk83/KY7K/yqNyf8qjMf/VsLx/57e+f8rkMz/AAAATi+R
        y/9ex/T/WsPx/1nC8P9YwvD/VsLx/5XS8P8qkMz/AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFi2SzP+i4fv/V8Ty/1nE8f9TwO//nd34/ymO
        yv8ukMv/XMbz/1jC8P9Xwe//VsHv/1PB8P+W1PD/KpDM/wAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWLZLM/6Lh+/9SwvH/VMHw/1C/
        7/+h3fj/Qq3h/1fD8v9VwfD/VMDv/1LA7/9PwPD/mdTw/yqQzP8AAAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYvk83/KY7K/yqM
        x/9SwfH/T7/v/06+7/9Qv/D/Ub/v/1G/7/9Pv+//TL/w/5vV8P8qkMz/AAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFi2S
        zP+j4vr/TcDw/0+/7/9Pvu7/T77u/0++7v9Pvu7/Tb7u/0q+7/+d1vH/KpDM/wAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAWLZLM/6Pi+/9Kv/H/TcDw/0y+7/9Mve7/TL3u/0q97v9GvO//n9bx/yqQzP8AAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABYvk83/KY7K/yyOyf8ujcj/Sr7u/0m87f9HvO3/Q7vu/6HY8v8qkMz/AAAABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFi2SzP+l4vr/Q73v/0e+7/9GvO7/RLvt/z+67v+k2fL/KpDM/wAA
        AAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWLZLM/6Xj+/9Au+//RLvu/0K67f89ue7/ptvz/yqQ
        y/8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYvk83/Ko7K/y2NyP8/uu3/Obfs/6nb
        8/8qkMv/AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFi2RzP+o4/v/N7jt/za3
        7f+r3PP/KpDL/wAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWK5DM/6Pf
        +f8ss+z/rd3z/yqQy/8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABYrkMz/ouH5/6rd9P8pj8v/AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAES2Szf+r3vX/KI/L/wAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGMZXO/y6Tzf8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAcAAAAPAAAAHwB8
        AD8AeAB/AHAA/wBgAf8AQAP/AAAH/wAAD/8AAB//AAA//wAAf/8AAP//AAH//wAD//8AB///AA///wAf
        //8AP///AH///wD///8B////A////wf///8P////
</value>
  </data>
</root>